---
title: "Developing Bioinformatics Software: Continuous Integration"
author: Kelly Sovacool
date: last-modified
categories:
    - R
    - Python
    - Bioinformatics
    - Software Development
execute:
    eval: true
    echo: true
---

:::: {.columns}

::: {.column}

R pkg
```yaml
name: build
```

:::

::: {.column}

Python pkg
```yaml
name: build
```

:::

::::

# Typical git workflow

[Trunk-based development](https://www.atlassian.com/continuous-delivery/continuous-integration/trunk-based-development)

1. An issue is opened
    - a developer or user notices a bug, requests a feature, or asks a question.
1. Engage in the issue comments
    - to clarify the issue, ask for a reproducible example, etc.
1. Work on the issue
    1. create a new branch and switch to it.
    1. write tests that will pass when the issue is resolved.
    1. write or edit code to resolve the issue.
    1. (possibly) write more tests to make sure edge cases and failure modes are handled.
    1. write/update documentation if needed.
    1. make sure your tests pass and the package still builds.
1. Create a pull request
    1. assign or request a reviewer.
    1. the reviewer reviews your code.
    1. you make any requested changes.
    1. the reviewer approves your pull request once they're happy with it.
    1. merge the pull request.
1. Celebrate that you resolved an issue!

# Continuous integration + git = magic

You don't have to remember to check that your package works, lint your code, 
update the documentation website: let the machines do it for you automatically!

Continuous integration is a practice where tests and other code quality checks 
are automatically run before code is merged into the main branch.

How does this modify our git workflow? The CI service will make sure the package 
builds, run our tests, etc. when we open the pull request, so we don't have to!

### CI service options

- GitHub Actions
- Travis
- Jenkins
- CircleCI
- Azure DevOps

# building a CI workflow with GitHub Actions

We're going to create a CI workflow that runs on pull requests to the main branch

### anatomy of a github actions workflow

## build

- R: devtools::install & check
- Python: python3 -m build

## test

- R: testthat
- Python: pytest

## code coverage

codecov is free for open source projects

## lint or style code

- R: styler
- Python: black

## document

- R: roxygen2
- Python: sphinx

### setup a documentation website

GitHub Pages will host your docs for free!

## other ways to trigger workflows